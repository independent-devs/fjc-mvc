= form_for(@product, url: path, html: {data: {controller: "product--with-slim"}, class: "w-full flex gap-5", method: method}) do |f|
  .flex.flex-col.gap-2.w-full
    - if @product.errors.present?
      = render ErrorMessageComponent.new(errors: @product.errors.full_messages, label: "validation")
    .field
      = f.label :name
      = f.text_field :name, required: true, placeholder: "e.g. Nike Shoe"
    .field
      = f.label :slug, class: ("text-gray-300" if is_new)
      = f.text_field :slug, disabled: is_new, value: is_new ? nil : f.object.slug, required: !is_new, placeholder: "e.g. nike-shoe"
    = f.fields_for :description, @product.description || Description.new do |desc|
      .field
        = desc.label :description
        = desc.text_area :description, rows: 12
    .flex.gap-3.items-center.py-2
      = f.check_box :has_variant, disabled: !is_new, data: { action: "product--with-slim#hasVariantToogle" },
      class: "text-primary rounded-sm focus:ring-0 disabled:cursor-not-allowed disabled:text-gray-200 disabled:bg-gray-200"
      = f.label :has_variant do
        With variants
    .field
      = f.label :options
      = f.select :option_ids, Option.pluck(:name, :id), {}, 
        {disabled: @product.errors.present? ? !f.object.has_variant : true, 
        multiple: true, data: { "product--with-slim-target": "optionInput" }}
    %h2.font-medium.text-lg.mt-3 SEO
    = f.fields_for :seo, @product.seo || Seo.new do |seo|
      .field
        = seo.label :meta_title
        = seo.text_field :meta_title
      .field
        = seo.label :meta_description
        = seo.text_area :meta_description
      .field
        = seo.label :meta_keywords
        = seo.text_field :meta_keywords
  .flex.flex-col.gap-2{class: "w-1/4 md:w-60"}
    .field
      = f.label :thumbnail
      = render "upload_thumbnail", form: f
    .field
      = f.label :available_on
      = f.datetime_local_field :available_on
    .field
      = f.label :discontinue_on
      = f.datetime_local_field :discontinue_on
    .field
      = f.label :currency
      = f.select :currency, currency_list,                                        
        {selected: is_new ? MoneyRails.default_currency : @product.currency},
        {required: true, disabled: true}
    - if is_new
      = f.hidden_field :currency, value: MoneyRails.default_currency
    = f.fields_for :master_variant, @product.master_variant || Variant.new do |mv|
      .field
        = mv.label :master_price
        = mv.number_field :price, required: true, step: :any, placeholder: "0.00"
      .field
        = mv.label :master_cost
        = mv.number_field :cost, step: :any, placeholder: "0.00"
      .field
        = mv.label :master_sku
        = mv.text_field :sku
      .flex.gap-2.items-center
        = mv.check_box :backorderable, class: "text-primary focus:ring-0 round-sm"
        %span Backorderable
      - if is_new
        = mv.hidden_field :is_master, value: true
    = f.submit is_new ? "Create" : "Update",          
    class: "mt-2 btn-primary w-full cursor-pointer disabled:bg-gray-300 disabled:cursor-wait"
