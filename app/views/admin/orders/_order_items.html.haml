.rounded.bg-white.border.border-gray-300.divide-y.divide-gray-300.shadow-sm
  .px-4.divide-y.divide-gray-300
    .text-sm.uppercase.py-3
      - if @order.placed_at.present?
        .text-gray-500
          = "Order placed #{time_ago_in_words(@order.placed_at)} ago"
      - else
        .text-red-600
          Order not yet placed
    - @order.order_items.each do |order_item|
      = render "order_item", order_item:
  .p-4.flex.justify-between
    .block
      - if @order.placed_at.blank?
        .text-sm.text-gray-500
          Non-placed orders will be removed within 24 hours
    .w-96.gap-3
      .flex.justify-between.pb-1
        .text-gray-600
          Subtotal
        .font-medium
          = price_with_currency(@order.subtotal, currency_symbol(MoneyRails.default_currency.id.to_s))
      .flex.justify-between.py-1
        .text-gray-600
          Discounted
        .font-medium.flex.text-green-600
          = "-"
          = price_with_currency(@order.discounted_price, currency_symbol(MoneyRails.default_currency.id.to_s))
      .flex.justify-between.py-1
        .text-gray-600
          Shipping Fee
        .font-medium
          = price_with_currency(@order.shipping_fee, currency_symbol(MoneyRails.default_currency.id.to_s))
      .flex.justify-between.pt-3.text-lg.border-t.mt-2.border-gray-300
        .font-semibold
          Total
        .font-semibold
          = render PriceRangeComponent.new lowest: @order.total, currency: MoneyRails.default_currency.id.to_s
