- title "Checkout"

.w-full.margin-max-screen.flex.flex-col.gap-6.py-6
  - unless @order.shipping_detail&.persisted? && @order.payment_method&.persisted?
    %ol.items-center.w-full.flex.sm:gap-18.gap-10
      %li.flex.items-center{class: "space-x-2.5 #{@order.shipping_detail&.persisted? ? "text-gray-500" : "text-primary"}"}
        %span.font-semibold.flex.items-center.justify-center.w-8.h-8.border.rounded-full.shrink-0{class: @order.shipping_detail&.persisted? ? "border-gray-500" : "border-primary"}
          1
        %span
          %h3.font-semibold.leading-tight Shipping Details
          %p.text-sm Fill shipping details
      %li.flex.items-center.text-gray-500{class: "space-x-2.5 #{!@order.shipping_detail&.persisted? ? "text-gray-500" : "text-primary"}"}
        %span.font-semibold.flex.items-center.justify-center.w-8.h-8.border.rounded-full.shrink-0{class: !@order.shipping_detail&.persisted? ? "border-gray-500" : "border-primary"}
          2
        %span
          %h3.font-semibold.leading-tight Payment Method
          %p.text-sm Select payment method
    - if @order.errors.present?
      = render ErrorMessageComponent.new(errors: @order.errors.full_messages, label: "")
    #shipping-details{class: ("hidden" if @order.shipping_detail&.persisted?)}
      = form_for(@order, url: shipping_details_checkout_path(@order), html: {data: {controller: "checkout--shipping-details"}}) do |f|
        = f.fields_for :shipping_detail, @order.shipping_detail || ShippingDetail.new do |sd|
          .grid.gap-2
            .grid.grid-cols-2.gap-3
              .field
                = sd.label :fullname, "Full Name"
                = sd.text_field :fullname, required: true
              .field{"data-controller": "phone"}
                = sd.label :phone_no, "Phone No."
                = sd.phone_field  :phone_no, required: true, autocomplete: "phone_no", data: {"phone-target": "input", action: "change->phone#telHiddenInput" }
                = sd.hidden_field :phone_no, "data-phone-target": "hidden"
            .field
              = sd.label :street, "Street Name, Building, House No."
              = sd.text_field :street, required: true
            .field
              = sd.label :state, "Province"
              = sd.select :state, Pilipinas::Province.all.sort_by(&:name).map {|p| [p.name, p.name]}, {}, {required: true, "data-checkout--shipping-details-target": "province", "data-action": "change->checkout--shipping-details#provinceChange"}
            .grid.grid-cols-2.gap-3
              .field
                = sd.label :city, "City/Municipality"
                = sd.select :city, sd.object.new_record? && @order.errors.blank? ? [] : Pilipinas::Province.find_by_name(sd.object.state).cities.map{|p| [p.name, p.name]}, {}, {required: true, disabled: sd.object.new_record? && @order.errors.blank?, "data-checkout--shipping-details-target": "city","data-action": "change->checkout--shipping-details#cityChange"}
              .field 
                = sd.label :postal_code, "Postal/Zip Code"
                = sd.text_field :postal_code
            .field
              = sd.label :barangay
              = sd.select :barangay, sd.object.new_record? && @order.errors.blank? ? [] : Pilipinas::City.find_by_name(sd.object.city).barangays.map{|p| [p.name, p.name]}, {}, {required: true, disabled: sd.object.new_record? && @order.errors.blank?, "data-checkout--shipping-details-target": "barangay"}
            = sd.hidden_field :country, value: "Philippines", readonly: true
          = f.submit "Submit and Proceed", class: "mt-5 btn-primary cursor-pointer w-fit"
    #payment-method{class: ("hidden" if !@order.shipping_detail&.persisted?)}
      = form_for(@order, url: payment_method_checkout_path(@order)) do |f|
        .grid.gap-2
          - PaymentMethod.all.each do |pm|
            .block
              = f.radio_button :payment_method_id, pm.id, id: pm.id, disabled: !pm.enable, checked: pm.code == "COD", class: "hidden peer"
              = f.label :payment_method_id, for: pm.id, class: "flex border rounded-md peer-checked:text-primary peer-checked:border-primary peer-disabled:text-gray-300 peer-disabled:cursor-not-allowed px-5 py-4 font-medium" do
                = pm.name
                - if !pm.enable
                  = "(Not available)"
        = f.submit "Place Order", class: "mt-5 btn-primary cursor-pointer w-fit px-10"
  - else 
    .grid.place-items-center.py-10
      .text-2xl.text-primary.font-bold
        Order already been placed.
      = link_to "Go to my orders", orders_path, class: "mt-3 btn-primary w-fit"
