.flex.w-full.gap-3.col-span-3.items-center.pl-5
  .flex.gap-3.items-center{class: "w-[70%]"}
    = render Carts::Item::CheckboxComponent.new cart:, invalid: cannot?(:proceed_checkout, cart)
    .flex.gap-2
      = link_to product_path(id: cart.product_id) do
        = image_tag cart.variant.product.thumbnail.variant(:small) || "thumbnail.png", class: "min-w-[75px] min-h-[75px] max-w-[75px] max-h-[75px] object-cover object-center border rounded-sm", id: "cart-#{cart.id}-thumbnail"
      .flex.flex-col.gap-1
        = link_to product_path(id: cart.product_id), class: "leading-tight line-clamp-2 text-[15px]" do
          = cart.product_name
        - if cart.user_id.blank? && cart.guest_session_id.present?
          .flex.items-center{id: "cart-#{cart.id}-guest-display", class: "gap-2.5"}
            .block{data: {controller: "popover"}}
              .relative.cursor-help{data: {action: "mouseenter->popover#show mouseleave->popover#hide"}}
                .tag-guest
                  Guest
              %template{data: {"popover-target": "content"}}
                .w-60.py-2.px-3.text-sm.text-gray-600.rounded-sm.shadow.mt-2.border.bg-white.z-10.transition-transform.origin-top-left.absolute{data: {"popover-target": "card"}}
                  This is a guest cart saved in this browser.
                  - if can?(:sync, cart)
                    Sync
                    = icon("fa-solid", "arrows-rotate", class: "text-gray-700")
                    this item to own the cart.
            - if can?(:sync, cart)
              %button.text-gray-400.text-lg.hover:text-gray-600.disabled:animate-spin.disabled:cursor-wait{type: "button", data: {action: "click->carts--item#sync", "carts--item-target": "sync"}}
                = icon("fa-solid", "arrows-rotate")
  - unless cart.is_master
    = render Carts::Item::VariantDropdownComponent.new cart:, sale:
  - else
    .text-sm
      = render StockCountComponent.new count: cart.count_on_hand, sale:
