# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `city-state` gem.
# Please instead update this file by running `bin/tapioca gem city-state`.


# source://city-state//lib/city-state/version.rb#1
module CS
  class << self
    # Emulates Rails' `blank?` method
    #
    # @return [Boolean]
    #
    # source://city-state//lib/city-state.rb#337
    def blank?(obj); end

    # source://city-state//lib/city-state.rb#159
    def cities(state, country = T.unsafe(nil)); end

    # list of all countries of the world (countries.yml)
    #
    # source://city-state//lib/city-state.rb#286
    def countries; end

    # source://city-state//lib/city-state.rb#135
    def current_country; end

    # source://city-state//lib/city-state.rb#155
    def current_country=(country); end

    # get is a method to simplify the use of city-state
    # get = countries, get(country) = states(country), get(country, state) = cities(state, country)
    #
    # source://city-state//lib/city-state.rb#330
    def get(country = T.unsafe(nil), state = T.unsafe(nil)); end

    # source://city-state//lib/city-state.rb#213
    def get_cities_lookup(country, state); end

    # source://city-state//lib/city-state.rb#241
    def get_countries_lookup; end

    # source://city-state//lib/city-state.rb#227
    def get_states_lookup(country); end

    # source://city-state//lib/city-state.rb#77
    def install(country); end

    # Emulates Rails' `present?` method
    #
    # @return [Boolean]
    #
    # source://city-state//lib/city-state.rb#342
    def present?(obj); end

    # source://city-state//lib/city-state.rb#198
    def set_cities_lookup_file(filename); end

    # source://city-state//lib/city-state.rb#208
    def set_countries_lookup_file(filename); end

    # source://city-state//lib/city-state.rb#31
    def set_license_key(license_key); end

    # source://city-state//lib/city-state.rb#27
    def set_maxmind_zip_url(maxmind_zip_url); end

    # source://city-state//lib/city-state.rb#203
    def set_states_lookup_file(filename); end

    # source://city-state//lib/city-state.rb#253
    def states(country); end

    # Emulates Rails' `symbolize_keys` method
    #
    # source://city-state//lib/city-state.rb#347
    def symbolize_keys(obj); end

    # source://city-state//lib/city-state.rb#59
    def update; end

    # source://city-state//lib/city-state.rb#37
    def update_maxmind; end
  end
end

# source://city-state//lib/city-state.rb#75
CS::CITY = T.let(T.unsafe(nil), Integer)

# source://city-state//lib/city-state.rb#9
CS::COUNTRIES_FN = T.let(T.unsafe(nil), String)

# source://city-state//lib/city-state.rb#71
CS::COUNTRY = T.let(T.unsafe(nil), Integer)

# source://city-state//lib/city-state.rb#72
CS::COUNTRY_LONG = T.let(T.unsafe(nil), Integer)

# source://city-state//lib/city-state.rb#10
CS::DEFAULT_CITIES_LOOKUP_FN = T.let(T.unsafe(nil), String)

# source://city-state//lib/city-state.rb#12
CS::DEFAULT_COUNTRIES_LOOKUP_FN = T.let(T.unsafe(nil), String)

# source://city-state//lib/city-state.rb#11
CS::DEFAULT_STATES_LOOKUP_FN = T.let(T.unsafe(nil), String)

# CS constants
#
# source://city-state//lib/city-state.rb#7
CS::FILES_FOLDER = T.let(T.unsafe(nil), String)

# constants: CVS position
#
# source://city-state//lib/city-state.rb#70
CS::ID = T.let(T.unsafe(nil), Integer)

# source://city-state//lib/city-state.rb#8
CS::MAXMIND_DB_FN = T.let(T.unsafe(nil), String)

# source://city-state//lib/city-state.rb#73
CS::STATE = T.let(T.unsafe(nil), Integer)

# source://city-state//lib/city-state.rb#74
CS::STATE_LONG = T.let(T.unsafe(nil), Integer)

# source://city-state//lib/city-state/version.rb#2
CS::VERSION = T.let(T.unsafe(nil), String)
